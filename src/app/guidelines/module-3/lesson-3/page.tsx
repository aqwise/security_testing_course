'use client';

import * as React from 'react';
import { ContentPageLayout, P, H2, H3, Ul } from '@/components/content/ContentPageLayout';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import Link from 'next/link';

const LinkStyle = "text-primary hover:text-primary/80 hover:underline";

export default function Module3Lesson3Page() {
  return (
    <ContentPageLayout
      title="Урок 3: Атаки на контроль доступа"
      subtitle="Модуль III: Атаки на Ключевые Механизмы Приложения"
    >
      <H2 id="theory">Теория</H2>
      <P>
        Контроль доступа – это механизм, определяющий, какие действия и ресурсы разрешены для конкретных пользователей. Он работает на основе аутентификации (определения личности пользователя) и управления сессиями (отслеживания пользователя между запросами). После того как приложение знает, кто вы, и поддерживает вашу сессию, задача контроля доступа – решить, что вам позволено делать и к чему вы можете обращаться.
      </P>
      
      <H3 id="vulnerability-types">Типы уязвимостей контроля доступа</H3>
      <P>
        Контроль доступа делится на три категории: вертикальный, горизонтальный и контекстно-зависимый (бизнес-логический):
      </P>
      <Ul items={[
        "Вертикальный контроль доступа разделяет права между разными уровнями пользователей (например, обычный пользователь vs. администратор). Вертикальное нарушение – это повышение привилегий: ситуация, когда пользователь получает доступ к функциям, не предназначенным для его роли. Например, если обычный пользователь может открыть административную страницу и удалить учетные записи, это вертикальное повышение привилегий.",
        "Горизонтальный контроль доступа ограничивает каждого пользователя набором объектов одного типа. Пользователю разрешено работать только со своими данными (письмами, счетами, заказами и т.п.). Горизонтальное нарушение – это обход ограничений по горизонтали: когда пользователь получает доступ к ресурсам другого пользователя на том же уровне. Например, если клиент банка может видеть баланс чужого счета, или пользователь почты читает чужие письма – это горизонтальное повышение привилегий.",
        "Контекстно-зависимый (бизнес-логический) контроль доступа учитывает состояние приложения или последовательность действий. Он гарантирует правильный порядок операций. Нарушение здесь позволяет обойти бизнес-логику приложения – например, пройти шаги процесса не в том порядке или пропустить важный этап. Классический пример: злоумышленник обходит этап оплаты в интернет-магазине и получает товар бесплатно."
      ]} />
      <P><strong>Замечание:</strong> Все три типа уязвимостей сводятся к одному: пользователь делает то, что не должен иметь возможности сделать. Различаются только сценарии и методы эксплуатации.</P>
      <P>
        Нарушение контроля доступа может иметь каскадный эффект. Например, удачная горизонтальная атака часто ведет к вертикальной: получив доступ к чужой учетной записи, злоумышленник может взять на прицел аккаунт с повышенными правами. Классический случай – сначала через уязвимость доступа сменить пароль другого пользователя, а затем захватить учетную запись администратора.
      </P>
      <P>
        Наихудшая ситуация – когда неаутентифицированный (гость) может получить доступ к привилегированным функциям. Такие критические сбои контроля доступа встречаются реже, но приводят к полному компромету системы.
      </P>

      <H3 id="common-vulnerabilities">Распространённые уязвимости и ошибки реализации</H3>
      <P>Большинство проблем с контролем доступа возникают из-за ошибок разработчиков при внедрении проверок. Ниже перечислены распространённые уязвимости контроля доступа:</P>
      <Ul items={[
        "Полностью незащищённая функциональность.",
        "Функции, основанные на идентификаторах (IDOR).",
        "Многоэтапные процессы без полноценных проверок.",
        "Незащищённые статические ресурсы.",
        "Ошибки конфигурации платформы.",
        "Небезопасные методы контроля доступа (на основе Referer, параметров клиента)."
      ]} />

      <H2 id="demonstration">Демонстрация</H2>
      <Card className="my-6">
        <CardHeader><CardTitle>Кейс 1: Вертикальное повышение привилегий</CardTitle></CardHeader>
        <CardContent>
          <P>
            <strong>Сценарий:</strong> В приложении имеется административный раздел по адресу /admin. Ссылку на него видят только администраторы. Однако разработчики не внедрили проверку прав при открытии этой страницы.
          </P>
          <P>
            <strong>Атака:</strong> Злоумышленник, обладая обычным аккаунтом, вручную переходит по URL /admin и получает полный доступ к админ-интерфейсу.
          </P>
           <P>
            <strong>Предотвращение:</strong> Всегда проверять роль пользователя на сервере при обращении к админским URL.
          </P>
        </CardContent>
      </Card>
       <Card className="my-6">
        <CardHeader><CardTitle>Кейс 2: Горизонтальное повышение привилегий (IDOR)</CardTitle></CardHeader>
        <CardContent>
          <P>
            <strong>Сценарий:</strong> Почтовое приложение использует URL вида /mailbox?user_id=1001.
          </P>
          <P>
            <strong>Атака:</strong> Пользователь с ID 1001 меняет значение на 1002 и получает доступ к почтовому ящику другого пользователя.
          </P>
           <P>
            <strong>Предотвращение:</strong> Сервер должен извлечь ID пользователя из сессии и использовать только его для выборки данных, либо сверять ID из URL с ID из сессии.
          </P>
        </CardContent>
      </Card>

      <H2 id="practice">Практика с PortSwigger</H2>
      <P>
        Для отработки навыков поиска уязвимостей контроля доступа отлично подходят интерактивные лабораторные работы из <Link href="https://portswigger.net/web-security/access-control" target="_blank" rel="noopener noreferrer" className={LinkStyle}>PortSwigger Web Security Academy</Link>.
      </P>
      <H3>Ключевые лаборатории:</H3>
      <Ul items={[
        <><Link href="https://portswigger.net/web-security/access-control/lab-unprotected-admin-functionality" target="_blank" rel="noopener noreferrer" className={LinkStyle}>Unprotected admin functionality</Link> - Поиск админ-панели через robots.txt.</>,
        <><Link href="https://portswigger.net/web-security/access-control/lab-user-role-controlled-by-request-parameter" target="_blank" rel="noopener noreferrer" className={LinkStyle}>User role controlled by request parameter</Link> - Повышение привилегий через изменение cookie.</>,
        <><Link href="https://portswigger.net/web-security/access-control/lab-referer-based-access-control" target="_blank" rel="noopener noreferrer" className={LinkStyle}>Referer-based access control</Link> - Обход контроля доступа подменой заголовка Referer.</>,
        <><Link href="https://portswigger.net/web-security/access-control/lab-insecure-direct-object-references" target="_blank" rel="noopener noreferrer" className={LinkStyle}>Insecure direct object references</Link> - Чтение чужих данных через перебор ID файла.</>
      ]} />
      
      <H2 id="quiz">Тест</H2>
      <Card>
        <CardHeader><CardTitle>Проверьте свои знания</CardTitle></CardHeader>
        <CardContent className="space-y-4">
          <div>
            <P><strong>1. Какое из ниже перечисленного наиболее точно описывает вертикальное повышение привилегий?</strong></P>
            <P className="text-primary font-semibold"><em>A. Обычный пользователь получает доступ к функциям администратора.</em></P>
          </div>
          <hr/>
          <div>
            <P><strong>2. Верно или неверно? Уязвимости контроля доступа возникают только после аутентификации (то есть только для уже вошедших пользователей).</strong></P>
            <P className="text-primary font-semibold"><em>Неверно. Критическая уязвимость - когда неаутентифицированный пользователь получает доступ к защищенным ресурсам.</em></P>
          </div>
          <hr/>
          <div>
            <P><strong>3. В чем основная опасность уязвимости типа IDOR (Insecure Direct Object Reference)?</strong></P>
            <P className="text-primary font-semibold"><em>C. Доступ к чужим данным или ресурсам путем подставления чужого идентификатора.</em></P>
          </div>
        </CardContent>
      </Card>
    </ContentPageLayout>
  );
}
